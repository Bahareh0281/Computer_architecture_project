$date
	Sun Jul  2 14:43:50 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb $end
$var reg 1 ! clk $end
$var reg 1 " reset $end
$scope module processor $end
$var wire 1 # FU_EXMEM_ReadData2 $end
$var wire 1 $ FU_EXMEM_Regwrite $end
$var wire 1 % FU_IDEX_inst1 $end
$var wire 1 & FU_IDEX_inst2 $end
$var wire 1 ' FU_MEMWB_RegWrite $end
$var wire 1 ( FU_MEMWB_read_data $end
$var wire 64 ) b_in [63:0] $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 1 * zero_output $end
$var wire 5 + rs2 [4:0] $end
$var wire 5 , rs1 [4:0] $end
$var wire 5 - rd [4:0] $end
$var wire 64 . out_from_mux3 [63:0] $end
$var wire 64 / out_from_mux2 [63:0] $end
$var wire 64 0 out_from_DM [63:0] $end
$var wire 7 1 opcode [6:0] $end
$var wire 64 2 imm_data [63:0] $end
$var wire 7 3 funct7 [6:0] $end
$var wire 3 4 funct3 [2:0] $end
$var wire 64 5 b_adder2 [63:0] $end
$var wire 64 6 a2_out [63:0] $end
$var wire 64 7 a1_out [63:0] $end
$var wire 64 8 Result_from_alu [63:0] $end
$var wire 64 9 Resb [63:0] $end
$var wire 64 : Resa [63:0] $end
$var wire 1 ; RegWrite $end
$var wire 64 < ReadData2 [63:0] $end
$var wire 64 = ReadData1 [63:0] $end
$var wire 1 > PC_src $end
$var wire 64 ? PC_Out [63:0] $end
$var wire 64 @ PC_In_from_mux [63:0] $end
$var wire 4 A Operation [3:0] $end
$var wire 1 B MemtoReg $end
$var wire 1 C MemWrite $end
$var wire 1 D MemRead $end
$var wire 64 E MEMWB_read_data [63:0] $end
$var wire 5 F MEMWB_inst2 [4:0] $end
$var wire 64 G MEMWB_Result [63:0] $end
$var wire 1 H MEMWB_RegWrite $end
$var wire 1 I MEMWB_MemtoReg $end
$var wire 32 J Instruction [31:0] $end
$var wire 32 K IFID_instruction [31:0] $end
$var wire 64 L IFID_PC_Out [63:0] $end
$var wire 5 M IDEX_inst2 [4:0] $end
$var wire 4 N IDEX_inst1 [3:0] $end
$var wire 64 O IDEX_imm_data [63:0] $end
$var wire 1 P IDEX_Regwrite $end
$var wire 64 Q IDEX_ReadData2 [63:0] $end
$var wire 64 R IDEX_ReadData1 [63:0] $end
$var wire 64 S IDEX_PC_Out [63:0] $end
$var wire 1 T IDEX_MemtoReg $end
$var wire 1 U IDEX_MemWrite $end
$var wire 1 V IDEX_MemRead $end
$var wire 1 W IDEX_Branch $end
$var wire 1 X IDEX_ALUSrc $end
$var wire 2 Y IDEX_ALUOp [1:0] $end
$var wire 4 Z Funct [3:0] $end
$var wire 2 [ FU_fwdB [1:0] $end
$var wire 2 \ FU_fwdA [1:0] $end
$var wire 64 ] EXMEM_out [63:0] $end
$var wire 5 ^ EXMEM_inst2 [4:0] $end
$var wire 1 _ EXMEM_ZERO $end
$var wire 64 ` EXMEM_Result [63:0] $end
$var wire 1 a EXMEM_RegWrite $end
$var wire 64 b EXMEM_ReadData2 [63:0] $end
$var wire 1 c EXMEM_MemtoReg $end
$var wire 1 d EXMEM_MemWrite $end
$var wire 1 e EXMEM_MemRead $end
$var wire 1 f EXMEM_Branch $end
$var wire 1 g Branch $end
$var wire 1 h ALUSrc $end
$var wire 2 i ALUOp [1:0] $end
$scope module a1 $end
$var wire 64 j b [63:0] $end
$var wire 64 k a [63:0] $end
$var reg 64 l out [63:0] $end
$upscope $end
$scope module a2 $end
$var wire 64 m b [63:0] $end
$var wire 64 n a [63:0] $end
$var reg 64 o out [63:0] $end
$upscope $end
$scope module alu $end
$var wire 64 p b [63:0] $end
$var wire 64 q a [63:0] $end
$var wire 4 r ALUOp [3:0] $end
$var reg 64 s Result [63:0] $end
$var reg 1 * ZERO $end
$upscope $end
$scope module aluc $end
$var wire 4 t Funct [3:0] $end
$var wire 2 u ALUOp [1:0] $end
$var reg 4 v Operation [3:0] $end
$upscope $end
$scope module cu $end
$var wire 7 w Opcode [6:0] $end
$var reg 2 x ALUOp [1:0] $end
$var reg 1 h ALUSrc $end
$var reg 1 g Branch $end
$var reg 1 D MemRead $end
$var reg 1 C MemWrite $end
$var reg 1 B MemtoReg $end
$var reg 1 ; Regwrite $end
$upscope $end
$scope module dg $end
$var wire 7 y opcode [6:0] $end
$var wire 32 z instruction [31:0] $end
$var reg 64 { imm_data [63:0] $end
$upscope $end
$scope module dm $end
$var wire 1 ! clk $end
$var wire 64 | write_data [63:0] $end
$var wire 1 d mem_write $end
$var wire 1 e mem_read $end
$var wire 64 } mem_addr [63:0] $end
$var reg 64 ~ read_data [63:0] $end
$upscope $end
$scope module exmem $end
$var wire 64 !" Result [63:0] $end
$var wire 1 * ZERO $end
$var wire 1 ! clk $end
$var wire 64 "" out [63:0] $end
$var wire 1 " reset $end
$var wire 5 #" IDEX_inst2 [4:0] $end
$var wire 1 P IDEX_Regwrite $end
$var wire 64 $" IDEX_ReadData2 [63:0] $end
$var wire 1 T IDEX_MemtoReg $end
$var wire 1 U IDEX_MemWrite $end
$var wire 1 V IDEX_MemRead $end
$var wire 1 W IDEX_Branch $end
$var reg 1 f EXMEM_Branch $end
$var reg 1 e EXMEM_MemRead $end
$var reg 1 d EXMEM_MemWrite $end
$var reg 1 c EXMEM_MemtoReg $end
$var reg 64 %" EXMEM_ReadData2 [63:0] $end
$var reg 1 a EXMEM_Regwrite $end
$var reg 64 &" EXMEM_Result [63:0] $end
$var reg 1 _ EXMEM_ZERO $end
$var reg 5 '" EXMEM_inst2 [4:0] $end
$var reg 64 (" EXMEM_out [63:0] $end
$upscope $end
$scope module fu $end
$var wire 1 # EXMEM_ReadData2 $end
$var wire 1 $ EXMEM_Regwrite $end
$var wire 1 ' MEMWB_RegWrite $end
$var wire 1 ( MEMWB_read_data $end
$var wire 1 % rs1 $end
$var wire 1 & rs2 $end
$var reg 2 )" fwd_A [1:0] $end
$var reg 2 *" fwd_B [1:0] $end
$upscope $end
$scope module idex $end
$var wire 2 +" ALUOp [1:0] $end
$var wire 1 h ALUSrc $end
$var wire 1 g Branch $end
$var wire 1 D MemRead $end
$var wire 1 C MemWrite $end
$var wire 1 B MemtoReg $end
$var wire 1 ; RegWrite $end
$var wire 1 ! clk $end
$var wire 64 ," imm_data [63:0] $end
$var wire 4 -" inst1 [3:0] $end
$var wire 1 " reset $end
$var wire 5 ." inst2 [4:0] $end
$var wire 64 /" ReadData2 [63:0] $end
$var wire 64 0" ReadData1 [63:0] $end
$var wire 64 1" PC_Out [63:0] $end
$var reg 2 2" IDEX_ALUOp [1:0] $end
$var reg 1 X IDEX_ALUSrc $end
$var reg 1 W IDEX_Branch $end
$var reg 1 V IDEX_MemRead $end
$var reg 1 U IDEX_MemWrite $end
$var reg 1 T IDEX_MemtoReg $end
$var reg 64 3" IDEX_PC_Out [63:0] $end
$var reg 64 4" IDEX_ReadData1 [63:0] $end
$var reg 64 5" IDEX_ReadData2 [63:0] $end
$var reg 1 P IDEX_Regwrite $end
$var reg 64 6" IDEX_imm_data [63:0] $end
$var reg 4 7" IDEX_inst1 [3:0] $end
$var reg 5 8" IDEX_inst2 [4:0] $end
$upscope $end
$scope module ifid $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 32 9" instruction [31:0] $end
$var wire 64 :" PC_Out [63:0] $end
$var reg 64 ;" IFID_PC_Out [63:0] $end
$var reg 32 <" IFID_instruction [31:0] $end
$upscope $end
$scope module im $end
$var wire 64 =" Inst_Address [63:0] $end
$var reg 32 >" Instruction [31:0] $end
$upscope $end
$scope module ip $end
$var wire 32 ?" instruction [31:0] $end
$var wire 5 @" rs2 [4:0] $end
$var wire 5 A" rs1 [4:0] $end
$var wire 5 B" rd [4:0] $end
$var wire 7 C" opcode [6:0] $end
$var wire 7 D" funct7 [6:0] $end
$var wire 3 E" funct3 [2:0] $end
$upscope $end
$scope module memwb $end
$var wire 1 c EXMEM_MemtoReg $end
$var wire 1 a EXMEM_RegWrite $end
$var wire 5 F" EXMEM_inst2 [4:0] $end
$var wire 64 G" Result [63:0] $end
$var wire 1 ! clk $end
$var wire 64 H" read_data [63:0] $end
$var wire 1 " reset $end
$var reg 1 I MEMWB_MemtoReg $end
$var reg 1 H MEMWB_RegWrite $end
$var reg 64 I" MEMWB_Result [63:0] $end
$var reg 5 J" MEMWB_inst2 [4:0] $end
$var reg 64 K" MEMWB_read_data [63:0] $end
$upscope $end
$scope module mux1 $end
$var wire 64 L" a [63:0] $end
$var wire 64 M" b [63:0] $end
$var wire 1 > s $end
$var wire 64 N" data_out [63:0] $end
$upscope $end
$scope module mux2 $end
$var wire 64 O" a [63:0] $end
$var wire 64 P" b [63:0] $end
$var wire 1 X s $end
$var wire 64 Q" data_out [63:0] $end
$upscope $end
$scope module mux3 $end
$var wire 64 R" a [63:0] $end
$var wire 64 S" b [63:0] $end
$var wire 1 I s $end
$var wire 64 T" data_out [63:0] $end
$upscope $end
$scope module mux_for_a $end
$var wire 64 U" a [63:0] $end
$var wire 64 V" b [63:0] $end
$var wire 64 W" c [63:0] $end
$var wire 2 X" sel [1:0] $end
$var reg 64 Y" Res [63:0] $end
$upscope $end
$scope module mux_for_b $end
$var wire 64 Z" a [63:0] $end
$var wire 64 [" b [63:0] $end
$var wire 64 \" c [63:0] $end
$var wire 2 ]" sel [1:0] $end
$var reg 64 ^" Res [63:0] $end
$upscope $end
$scope module pc $end
$var wire 64 _" PC_In [63:0] $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var reg 64 `" PC_Out [63:0] $end
$var reg 1 a" reset_force $end
$upscope $end
$scope module rf $end
$var wire 5 b" RD [4:0] $end
$var wire 5 c" RS1 [4:0] $end
$var wire 5 d" RS2 [4:0] $end
$var wire 1 H RegWrite $end
$var wire 64 e" WriteData [63:0] $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var reg 64 f" ReadData1 [63:0] $end
$var reg 64 g" ReadData2 [63:0] $end
$upscope $end
$scope module s $end
$var wire 1 _ ZERO $end
$var wire 64 h" a [63:0] $end
$var wire 64 i" b [63:0] $end
$var wire 1 f branch $end
$var wire 3 j" funct3 [2:0] $end
$var reg 1 > sel $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 j"
b0 i"
b0 h"
b0 g"
b0 f"
b0 e"
b0 d"
b0 c"
b0 b"
0a"
b0 `"
b100 _"
b0 ^"
b0 ]"
b0 \"
b0 ["
b0 Z"
b0 Y"
b0 X"
b0 W"
b0 V"
b0 U"
b0 T"
b0 S"
b0 R"
b0 Q"
b0 P"
b0 O"
b100 N"
b0 M"
b100 L"
b0 K"
b0 J"
b0 I"
bx H"
b0 G"
b0 F"
b0 E"
b0 D"
b0 C"
b0 B"
b0 A"
b0 @"
b0 ?"
b10100001010011010010000011 >"
b0 ="
b0 <"
b0 ;"
b0 :"
b10100001010011010010000011 9"
b0 8"
b0 7"
b0 6"
b0 5"
b0 4"
b0 3"
b0 2"
b0 1"
b0 0"
b0 /"
b0 ."
b0 -"
b0 ,"
b0 +"
b0 *"
b0 )"
b0 ("
b0 '"
b0 &"
b0 %"
b0 $"
b0 #"
b0 ""
b0 !"
bx ~
b0 }
b0 |
b0 {
b0 z
b0 y
b0 x
b0 w
b10 v
b0 u
b0 t
b0 s
b10 r
b0 q
b0 p
b0 o
b0 n
b0 m
b100 l
b0 k
b100 j
b0 i
0h
0g
0f
0e
0d
0c
b0 b
0a
b0 `
0_
b0 ^
b0 ]
b0 \
b0 [
b11 Z
b0 Y
0X
0W
0V
0U
0T
b0 S
b0 R
b0 Q
0P
b0 O
b0 N
b0 M
b0 L
b0 K
b10100001010011010010000011 J
0I
0H
b0 G
b0 F
b0 E
0D
0C
0B
b10 A
b100 @
b0 ?
0>
b0 =
b0 <
0;
b0 :
b0 9
b0 8
b100 7
b0 6
b0 5
b0 4
b0 3
b0 2
b0 1
bx 0
b0 /
b0 .
b0 -
b0 ,
b0 +
0*
b100 )
z(
z'
z&
z%
z$
z#
1"
0!
$end
#5
1D
1;
1B
1h
b101000 2
b101000 {
b101000 ,"
b11 1
b11 w
b11 C"
b1001 -
b1001 ."
b1001 B"
b11 4
b11 E"
b11 j"
b1010 ,
b1010 A"
b1010 c"
b1000 +
b1000 @"
b1000 d"
b1 3
b1 D"
b11 y
b11 -"
bx E
bx K"
bx S"
b10100001010011010010000011 K
b10100001010011010010000011 z
b10100001010011010010000011 <"
b10100001010011010010000011 ?"
1!
#10
1a"
0D
0;
0B
0h
b0 1
b0 w
b0 C"
b0 -
b0 ."
b0 B"
b0 4
b0 E"
b0 j"
b0 ,
b0 A"
b0 c"
b0 +
b0 @"
b0 d"
b0 3
b0 D"
b0 y
b0 -"
b0 2
b0 {
b0 ,"
b0 K
b0 z
b0 <"
b0 ?"
b0 E
b0 K"
b0 S"
0!
0"
#15
0a"
1D
1;
1B
1h
b101000 2
b101000 {
b101000 ,"
b11 1
b11 w
b11 C"
b1001 -
b1001 ."
b1001 B"
b11 4
b11 E"
b11 j"
b1010 ,
b1010 A"
b1010 c"
b1000 +
b1000 @"
b1000 d"
b1 3
b1 D"
b11 y
b11 -"
bx E
bx K"
bx S"
b10100001010011010010000011 K
b10100001010011010010000011 z
b10100001010011010010000011 <"
b10100001010011010010000011 ?"
1!
#20
0!
#25
b1010000 6
b1010000 o
b1010000 ""
b1000 @
b1000 N"
b1000 _"
b0 Z
b101000 /
b101000 Q"
b101000 i"
b1010000 5
b1010000 m
b1000 7
b1000 l
b1000 L"
b10101001000010100010011 J
b10101001000010100010011 9"
b10101001000010100010011 >"
b100 L
b100 1"
b100 ;"
1T
1P
1X
1V
b1001 M
b1001 #"
b1001 8"
b11 N
b11 t
b11 7"
b101000 O
b101000 6"
b101000 P"
b100 ?
b100 k
b100 :"
b100 ="
b100 `"
1!
#30
0!
#35
0B
b1100 @
b1100 N"
b1100 _"
bx Z
bx .
bx T"
bx V"
bx ["
bx e"
b0 0
b0 ~
b0 H"
b1011000 6
b1011000 o
b1011000 ""
b10011 1
b10011 w
b10011 C"
b1010 -
b1010 ."
b1010 B"
b0 4
b0 E"
b0 j"
b1001 ,
b1001 A"
b1001 c"
b101 +
b101 @"
b101 d"
b0 3
b0 D"
b10011 y
b0 -"
b101 2
b101 {
b101 ,"
b1100 7
b1100 l
b1100 L"
bx J
bx 9"
bx >"
b1001 F
b1001 J"
b1001 b"
1H
1I
1a
1c
1e
b1001 ^
b1001 '"
b1001 F"
b1010000 ]
b1010000 ("
b1010000 M"
b1000 S
b1000 n
b1000 3"
b1000 L
b1000 1"
b1000 ;"
b10101001000010100010011 K
b10101001000010100010011 z
b10101001000010100010011 <"
b10101001000010100010011 ?"
b1000 ?
b1000 k
b1000 :"
b1000 ="
b1000 `"
1!
#40
bx =
bx 0"
bx f"
0!
#45
0D
0;
0h
bx <
bx /"
bx g"
b10010 6
b10010 o
b10010 ""
bx 8
bx s
bx !"
b10000 @
b10000 N"
b10000 _"
bx 1
bx w
bx C"
bx -
bx ."
bx B"
bx 4
bx E"
bx j"
bx ,
bx A"
bx c"
bx +
bx @"
bx d"
bx 3
bx D"
bx y
bx -"
b0 2
b0 {
b0 ,"
b101 /
b101 Q"
b101 i"
b1010 5
b1010 m
bx :
bx q
bx Y"
b0 .
b0 T"
b0 V"
b0 ["
b0 e"
b10000 7
b10000 l
b10000 L"
b1100 L
b1100 1"
b1100 ;"
bx K
bx z
bx <"
bx ?"
0T
b1010 M
b1010 #"
b1010 8"
b0 N
b0 t
b0 7"
b101 O
b101 6"
b101 P"
bx R
bx 4"
bx U"
bx h"
b1011000 ]
b1011000 ("
b1011000 M"
b0 E
b0 K"
b0 S"
b1100 ?
b1100 k
b1100 :"
b1100 ="
b1100 `"
1!
#50
0!
#55
b10100 @
b10100 N"
b10100 _"
bx .
bx T"
bx V"
bx ["
bx e"
bx /
bx Q"
bx i"
b0 5
b0 m
bx 9
bx p
bx ^"
b10000 6
b10000 o
b10000 ""
b10100 7
b10100 l
b10100 L"
bx F
bx J"
bx b"
0H
0I
bx G
bx I"
bx R"
0a
0c
0e
bx ^
bx '"
bx F"
bx b
bx |
bx %"
bx `
bx }
bx &"
bx G"
bx W"
bx \"
b10010 ]
b10010 ("
b10010 M"
0P
0X
0V
bx M
bx #"
bx 8"
bx N
bx t
bx 7"
b0 O
b0 6"
b0 P"
bx Q
bx $"
bx 5"
bx O"
bx Z"
b10000 S
b10000 n
b10000 3"
b10000 L
b10000 1"
b10000 ;"
b10000 ?
b10000 k
b10000 :"
b10000 ="
b10000 `"
1!
#60
0!
#65
b11000 @
b11000 N"
b11000 _"
b11000 7
b11000 l
b11000 L"
b10100 L
b10100 1"
b10100 ;"
b10000 ]
b10000 ("
b10000 M"
b10100 ?
b10100 k
b10100 :"
b10100 ="
b10100 `"
1!
#70
0!
#75
b11100 @
b11100 N"
b11100 _"
b11000 6
b11000 o
b11000 ""
b11100 7
b11100 l
b11100 L"
b11000 S
b11000 n
b11000 3"
b11000 L
b11000 1"
b11000 ;"
b11000 ?
b11000 k
b11000 :"
b11000 ="
b11000 `"
1!
#80
0!
#85
b100000 @
b100000 N"
b100000 _"
b100000 7
b100000 l
b100000 L"
b11100 L
b11100 1"
b11100 ;"
b11000 ]
b11000 ("
b11000 M"
b11100 ?
b11100 k
b11100 :"
b11100 ="
b11100 `"
1!
#90
0!
#95
b100100 @
b100100 N"
b100100 _"
b100000 6
b100000 o
b100000 ""
b100100 7
b100100 l
b100100 L"
b100000 S
b100000 n
b100000 3"
b100000 L
b100000 1"
b100000 ;"
b100000 ?
b100000 k
b100000 :"
b100000 ="
b100000 `"
1!
#100
0!
#105
b101000 @
b101000 N"
b101000 _"
b101000 7
b101000 l
b101000 L"
b100100 L
b100100 1"
b100100 ;"
b100000 ]
b100000 ("
b100000 M"
b100100 ?
b100100 k
b100100 :"
b100100 ="
b100100 `"
1!
#110
0!
#115
b101100 @
b101100 N"
b101100 _"
b101000 6
b101000 o
b101000 ""
b101100 7
b101100 l
b101100 L"
b101000 S
b101000 n
b101000 3"
b101000 L
b101000 1"
b101000 ;"
b101000 ?
b101000 k
b101000 :"
b101000 ="
b101000 `"
1!
#120
0!
#125
b110000 @
b110000 N"
b110000 _"
b110000 7
b110000 l
b110000 L"
b101100 L
b101100 1"
b101100 ;"
b101000 ]
b101000 ("
b101000 M"
b101100 ?
b101100 k
b101100 :"
b101100 ="
b101100 `"
1!
#130
0!
#135
b110100 @
b110100 N"
b110100 _"
b110000 6
b110000 o
b110000 ""
b110100 7
b110100 l
b110100 L"
b110000 S
b110000 n
b110000 3"
b110000 L
b110000 1"
b110000 ;"
b110000 ?
b110000 k
b110000 :"
b110000 ="
b110000 `"
1!
#140
0!
#145
b111000 @
b111000 N"
b111000 _"
b111000 7
b111000 l
b111000 L"
b110100 L
b110100 1"
b110100 ;"
b110000 ]
b110000 ("
b110000 M"
b110100 ?
b110100 k
b110100 :"
b110100 ="
b110100 `"
1!
#150
0!
#155
b111100 @
b111100 N"
b111100 _"
b111000 6
b111000 o
b111000 ""
b111100 7
b111100 l
b111100 L"
b111000 S
b111000 n
b111000 3"
b111000 L
b111000 1"
b111000 ;"
b111000 ?
b111000 k
b111000 :"
b111000 ="
b111000 `"
1!
#160
0!
#165
b1000000 @
b1000000 N"
b1000000 _"
b1000000 7
b1000000 l
b1000000 L"
b111100 L
b111100 1"
b111100 ;"
b111000 ]
b111000 ("
b111000 M"
b111100 ?
b111100 k
b111100 :"
b111100 ="
b111100 `"
1!
#170
0!
#175
b1000100 @
b1000100 N"
b1000100 _"
b1000000 6
b1000000 o
b1000000 ""
b1000100 7
b1000100 l
b1000100 L"
b1000000 S
b1000000 n
b1000000 3"
b1000000 L
b1000000 1"
b1000000 ;"
b1000000 ?
b1000000 k
b1000000 :"
b1000000 ="
b1000000 `"
1!
#180
0!
#185
b1001000 @
b1001000 N"
b1001000 _"
b1001000 7
b1001000 l
b1001000 L"
b1000100 L
b1000100 1"
b1000100 ;"
b1000000 ]
b1000000 ("
b1000000 M"
b1000100 ?
b1000100 k
b1000100 :"
b1000100 ="
b1000100 `"
1!
#190
0!
#195
b1001100 @
b1001100 N"
b1001100 _"
b1001000 6
b1001000 o
b1001000 ""
b1001100 7
b1001100 l
b1001100 L"
b1001000 S
b1001000 n
b1001000 3"
b1001000 L
b1001000 1"
b1001000 ;"
b1001000 ?
b1001000 k
b1001000 :"
b1001000 ="
b1001000 `"
1!
#200
0!
#205
b1010000 @
b1010000 N"
b1010000 _"
b1010000 7
b1010000 l
b1010000 L"
b1001100 L
b1001100 1"
b1001100 ;"
b1001000 ]
b1001000 ("
b1001000 M"
b1001100 ?
b1001100 k
b1001100 :"
b1001100 ="
b1001100 `"
1!
#210
0!
#215
b1010100 @
b1010100 N"
b1010100 _"
b1010000 6
b1010000 o
b1010000 ""
b1010100 7
b1010100 l
b1010100 L"
b1010000 S
b1010000 n
b1010000 3"
b1010000 L
b1010000 1"
b1010000 ;"
b1010000 ?
b1010000 k
b1010000 :"
b1010000 ="
b1010000 `"
1!
#220
0!
#225
b1011000 @
b1011000 N"
b1011000 _"
b1011000 7
b1011000 l
b1011000 L"
b1010100 L
b1010100 1"
b1010100 ;"
b1010000 ]
b1010000 ("
b1010000 M"
b1010100 ?
b1010100 k
b1010100 :"
b1010100 ="
b1010100 `"
1!
#230
0!
#235
b1011100 @
b1011100 N"
b1011100 _"
b1011000 6
b1011000 o
b1011000 ""
b1011100 7
b1011100 l
b1011100 L"
b1011000 S
b1011000 n
b1011000 3"
b1011000 L
b1011000 1"
b1011000 ;"
b1011000 ?
b1011000 k
b1011000 :"
b1011000 ="
b1011000 `"
1!
#240
0!
#245
b1100000 @
b1100000 N"
b1100000 _"
b1100000 7
b1100000 l
b1100000 L"
b1011100 L
b1011100 1"
b1011100 ;"
b1011000 ]
b1011000 ("
b1011000 M"
b1011100 ?
b1011100 k
b1011100 :"
b1011100 ="
b1011100 `"
1!
#250
0!
#255
b1100100 @
b1100100 N"
b1100100 _"
b1100000 6
b1100000 o
b1100000 ""
b1100100 7
b1100100 l
b1100100 L"
b1100000 S
b1100000 n
b1100000 3"
b1100000 L
b1100000 1"
b1100000 ;"
b1100000 ?
b1100000 k
b1100000 :"
b1100000 ="
b1100000 `"
1!
#260
0!
#265
b1101000 @
b1101000 N"
b1101000 _"
b1101000 7
b1101000 l
b1101000 L"
b1100100 L
b1100100 1"
b1100100 ;"
b1100000 ]
b1100000 ("
b1100000 M"
b1100100 ?
b1100100 k
b1100100 :"
b1100100 ="
b1100100 `"
1!
#270
0!
#275
b1101100 @
b1101100 N"
b1101100 _"
b1101000 6
b1101000 o
b1101000 ""
b1101100 7
b1101100 l
b1101100 L"
b1101000 S
b1101000 n
b1101000 3"
b1101000 L
b1101000 1"
b1101000 ;"
b1101000 ?
b1101000 k
b1101000 :"
b1101000 ="
b1101000 `"
1!
#280
0!
#285
b1110000 @
b1110000 N"
b1110000 _"
b1110000 7
b1110000 l
b1110000 L"
b1101100 L
b1101100 1"
b1101100 ;"
b1101000 ]
b1101000 ("
b1101000 M"
b1101100 ?
b1101100 k
b1101100 :"
b1101100 ="
b1101100 `"
1!
#290
0!
#295
b1110100 @
b1110100 N"
b1110100 _"
b1110000 6
b1110000 o
b1110000 ""
b1110100 7
b1110100 l
b1110100 L"
b1110000 S
b1110000 n
b1110000 3"
b1110000 L
b1110000 1"
b1110000 ;"
b1110000 ?
b1110000 k
b1110000 :"
b1110000 ="
b1110000 `"
1!
#300
0!
#305
b1111000 @
b1111000 N"
b1111000 _"
b1111000 7
b1111000 l
b1111000 L"
b1110100 L
b1110100 1"
b1110100 ;"
b1110000 ]
b1110000 ("
b1110000 M"
b1110100 ?
b1110100 k
b1110100 :"
b1110100 ="
b1110100 `"
1!
#310
0!
#315
b1111100 @
b1111100 N"
b1111100 _"
b1111000 6
b1111000 o
b1111000 ""
b1111100 7
b1111100 l
b1111100 L"
b1111000 S
b1111000 n
b1111000 3"
b1111000 L
b1111000 1"
b1111000 ;"
b1111000 ?
b1111000 k
b1111000 :"
b1111000 ="
b1111000 `"
1!
#320
0!
#325
b10000000 @
b10000000 N"
b10000000 _"
b10000000 7
b10000000 l
b10000000 L"
b1111100 L
b1111100 1"
b1111100 ;"
b1111000 ]
b1111000 ("
b1111000 M"
b1111100 ?
b1111100 k
b1111100 :"
b1111100 ="
b1111100 `"
1!
#330
0!
#335
b10000100 @
b10000100 N"
b10000100 _"
b10000000 6
b10000000 o
b10000000 ""
b10000100 7
b10000100 l
b10000100 L"
b10000000 S
b10000000 n
b10000000 3"
b10000000 L
b10000000 1"
b10000000 ;"
b10000000 ?
b10000000 k
b10000000 :"
b10000000 ="
b10000000 `"
1!
#340
0!
#345
b10001000 @
b10001000 N"
b10001000 _"
b10001000 7
b10001000 l
b10001000 L"
b10000100 L
b10000100 1"
b10000100 ;"
b10000000 ]
b10000000 ("
b10000000 M"
b10000100 ?
b10000100 k
b10000100 :"
b10000100 ="
b10000100 `"
1!
#350
0!
#355
b10001100 @
b10001100 N"
b10001100 _"
b10001000 6
b10001000 o
b10001000 ""
b10001100 7
b10001100 l
b10001100 L"
b10001000 S
b10001000 n
b10001000 3"
b10001000 L
b10001000 1"
b10001000 ;"
b10001000 ?
b10001000 k
b10001000 :"
b10001000 ="
b10001000 `"
1!
#360
0!
#365
b10010000 @
b10010000 N"
b10010000 _"
b10010000 7
b10010000 l
b10010000 L"
b10001100 L
b10001100 1"
b10001100 ;"
b10001000 ]
b10001000 ("
b10001000 M"
b10001100 ?
b10001100 k
b10001100 :"
b10001100 ="
b10001100 `"
1!
#370
0!
#375
b10010100 @
b10010100 N"
b10010100 _"
b10010000 6
b10010000 o
b10010000 ""
b10010100 7
b10010100 l
b10010100 L"
b10010000 S
b10010000 n
b10010000 3"
b10010000 L
b10010000 1"
b10010000 ;"
b10010000 ?
b10010000 k
b10010000 :"
b10010000 ="
b10010000 `"
1!
#380
0!
#385
b10011000 @
b10011000 N"
b10011000 _"
b10011000 7
b10011000 l
b10011000 L"
b10010100 L
b10010100 1"
b10010100 ;"
b10010000 ]
b10010000 ("
b10010000 M"
b10010100 ?
b10010100 k
b10010100 :"
b10010100 ="
b10010100 `"
1!
#390
0!
#395
b10011100 @
b10011100 N"
b10011100 _"
b10011000 6
b10011000 o
b10011000 ""
b10011100 7
b10011100 l
b10011100 L"
b10011000 S
b10011000 n
b10011000 3"
b10011000 L
b10011000 1"
b10011000 ;"
b10011000 ?
b10011000 k
b10011000 :"
b10011000 ="
b10011000 `"
1!
#400
0!
#405
b10100000 @
b10100000 N"
b10100000 _"
b10100000 7
b10100000 l
b10100000 L"
b10011100 L
b10011100 1"
b10011100 ;"
b10011000 ]
b10011000 ("
b10011000 M"
b10011100 ?
b10011100 k
b10011100 :"
b10011100 ="
b10011100 `"
1!
#410
0!
#415
b10100100 @
b10100100 N"
b10100100 _"
b10100000 6
b10100000 o
b10100000 ""
b10100100 7
b10100100 l
b10100100 L"
b10100000 S
b10100000 n
b10100000 3"
b10100000 L
b10100000 1"
b10100000 ;"
b10100000 ?
b10100000 k
b10100000 :"
b10100000 ="
b10100000 `"
1!
#420
0!
#425
b10101000 @
b10101000 N"
b10101000 _"
b10101000 7
b10101000 l
b10101000 L"
b10100100 L
b10100100 1"
b10100100 ;"
b10100000 ]
b10100000 ("
b10100000 M"
b10100100 ?
b10100100 k
b10100100 :"
b10100100 ="
b10100100 `"
1!
#430
0!
#435
b10101100 @
b10101100 N"
b10101100 _"
b10101000 6
b10101000 o
b10101000 ""
b10101100 7
b10101100 l
b10101100 L"
b10101000 S
b10101000 n
b10101000 3"
b10101000 L
b10101000 1"
b10101000 ;"
b10101000 ?
b10101000 k
b10101000 :"
b10101000 ="
b10101000 `"
1!
#440
0!
#445
b10110000 @
b10110000 N"
b10110000 _"
b10110000 7
b10110000 l
b10110000 L"
b10101100 L
b10101100 1"
b10101100 ;"
b10101000 ]
b10101000 ("
b10101000 M"
b10101100 ?
b10101100 k
b10101100 :"
b10101100 ="
b10101100 `"
1!
#450
0!
#455
b10110100 @
b10110100 N"
b10110100 _"
b10110000 6
b10110000 o
b10110000 ""
b10110100 7
b10110100 l
b10110100 L"
b10110000 S
b10110000 n
b10110000 3"
b10110000 L
b10110000 1"
b10110000 ;"
b10110000 ?
b10110000 k
b10110000 :"
b10110000 ="
b10110000 `"
1!
#460
0!
#465
b10111000 @
b10111000 N"
b10111000 _"
b10111000 7
b10111000 l
b10111000 L"
b10110100 L
b10110100 1"
b10110100 ;"
b10110000 ]
b10110000 ("
b10110000 M"
b10110100 ?
b10110100 k
b10110100 :"
b10110100 ="
b10110100 `"
1!
#470
0!
#475
b10111100 @
b10111100 N"
b10111100 _"
b10111000 6
b10111000 o
b10111000 ""
b10111100 7
b10111100 l
b10111100 L"
b10111000 S
b10111000 n
b10111000 3"
b10111000 L
b10111000 1"
b10111000 ;"
b10111000 ?
b10111000 k
b10111000 :"
b10111000 ="
b10111000 `"
1!
#480
0!
#485
b11000000 @
b11000000 N"
b11000000 _"
b11000000 7
b11000000 l
b11000000 L"
b10111100 L
b10111100 1"
b10111100 ;"
b10111000 ]
b10111000 ("
b10111000 M"
b10111100 ?
b10111100 k
b10111100 :"
b10111100 ="
b10111100 `"
1!
#490
0!
#495
b11000100 @
b11000100 N"
b11000100 _"
b11000000 6
b11000000 o
b11000000 ""
b11000100 7
b11000100 l
b11000100 L"
b11000000 S
b11000000 n
b11000000 3"
b11000000 L
b11000000 1"
b11000000 ;"
b11000000 ?
b11000000 k
b11000000 :"
b11000000 ="
b11000000 `"
1!
#500
0!
#505
b11001000 @
b11001000 N"
b11001000 _"
b11001000 7
b11001000 l
b11001000 L"
b11000100 L
b11000100 1"
b11000100 ;"
b11000000 ]
b11000000 ("
b11000000 M"
b11000100 ?
b11000100 k
b11000100 :"
b11000100 ="
b11000100 `"
1!
#510
0!
